// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: harvester/services.proto

package harvester

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Resource
type ListOsintRelatedResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *ListOsintRelatedResourceRequest) Reset() {
	*x = ListOsintRelatedResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harvester_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintRelatedResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintRelatedResourceRequest) ProtoMessage() {}

func (x *ListOsintRelatedResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_harvester_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintRelatedResourceRequest.ProtoReflect.Descriptor instead.
func (*ListOsintRelatedResourceRequest) Descriptor() ([]byte, []int) {
	return file_harvester_services_proto_rawDescGZIP(), []int{0}
}

func (x *ListOsintRelatedResourceRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ListOsintRelatedResourceRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type ListOsintRelatedResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintResource []*OsintRelatedResource `protobuf:"bytes,1,rep,name=osint_resource,json=osintResource,proto3" json:"osint_resource,omitempty"`
}

func (x *ListOsintRelatedResourceResponse) Reset() {
	*x = ListOsintRelatedResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harvester_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintRelatedResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintRelatedResourceResponse) ProtoMessage() {}

func (x *ListOsintRelatedResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_harvester_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintRelatedResourceResponse.ProtoReflect.Descriptor instead.
func (*ListOsintRelatedResourceResponse) Descriptor() ([]byte, []int) {
	return file_harvester_services_proto_rawDescGZIP(), []int{1}
}

func (x *ListOsintRelatedResourceResponse) GetOsintResource() []*OsintRelatedResource {
	if x != nil {
		return x.OsintResource
	}
	return nil
}

// Invoke Scan
type InvokeScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *InvokeScanRequest) Reset() {
	*x = InvokeScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harvester_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanRequest) ProtoMessage() {}

func (x *InvokeScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_harvester_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanRequest) Descriptor() ([]byte, []int) {
	return file_harvester_services_proto_rawDescGZIP(), []int{2}
}

func (x *InvokeScanRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *InvokeScanRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

// Entity
type OsintRelatedResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintResourceId     uint32 `protobuf:"varint,1,opt,name=osint_resource_id,json=osintResourceId,proto3" json:"osint_resource_id,omitempty"`
	RelatedResourceName uint32 `protobuf:"varint,2,opt,name=related_resource_name,json=relatedResourceName,proto3" json:"related_resource_name,omitempty"`
	RelatedResourceType string `protobuf:"bytes,3,opt,name=related_resource_type,json=relatedResourceType,proto3" json:"related_resource_type,omitempty"`
}

func (x *OsintRelatedResource) Reset() {
	*x = OsintRelatedResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harvester_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsintRelatedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsintRelatedResource) ProtoMessage() {}

func (x *OsintRelatedResource) ProtoReflect() protoreflect.Message {
	mi := &file_harvester_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsintRelatedResource.ProtoReflect.Descriptor instead.
func (*OsintRelatedResource) Descriptor() ([]byte, []int) {
	return file_harvester_services_proto_rawDescGZIP(), []int{3}
}

func (x *OsintRelatedResource) GetOsintResourceId() uint32 {
	if x != nil {
		return x.OsintResourceId
	}
	return 0
}

func (x *OsintRelatedResource) GetRelatedResourceName() uint32 {
	if x != nil {
		return x.RelatedResourceName
	}
	return 0
}

func (x *OsintRelatedResource) GetRelatedResourceType() string {
	if x != nil {
		return x.RelatedResourceType
	}
	return ""
}

var File_harvester_services_proto protoreflect.FileDescriptor

var file_harvester_services_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x70, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x32, 0xe1, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x68, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x68,
	0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0a, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_harvester_services_proto_rawDescOnce sync.Once
	file_harvester_services_proto_rawDescData = file_harvester_services_proto_rawDesc
)

func file_harvester_services_proto_rawDescGZIP() []byte {
	file_harvester_services_proto_rawDescOnce.Do(func() {
		file_harvester_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_harvester_services_proto_rawDescData)
	})
	return file_harvester_services_proto_rawDescData
}

var file_harvester_services_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_harvester_services_proto_goTypes = []interface{}{
	(*ListOsintRelatedResourceRequest)(nil),  // 0: osint.harvester.ListOsintRelatedResourceRequest
	(*ListOsintRelatedResourceResponse)(nil), // 1: osint.harvester.ListOsintRelatedResourceResponse
	(*InvokeScanRequest)(nil),                // 2: osint.harvester.InvokeScanRequest
	(*OsintRelatedResource)(nil),             // 3: osint.harvester.OsintRelatedResource
	(*empty.Empty)(nil),                      // 4: google.protobuf.Empty
}
var file_harvester_services_proto_depIdxs = []int32{
	3, // 0: osint.harvester.ListOsintRelatedResourceResponse.osint_resource:type_name -> osint.harvester.OsintRelatedResource
	0, // 1: osint.harvester.ResourceService.ListOsintRelatedResource:input_type -> osint.harvester.ListOsintRelatedResourceRequest
	2, // 2: osint.harvester.ResourceService.InvokeScan:input_type -> osint.harvester.InvokeScanRequest
	1, // 3: osint.harvester.ResourceService.ListOsintRelatedResource:output_type -> osint.harvester.ListOsintRelatedResourceResponse
	4, // 4: osint.harvester.ResourceService.InvokeScan:output_type -> google.protobuf.Empty
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_harvester_services_proto_init() }
func file_harvester_services_proto_init() {
	if File_harvester_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_harvester_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintRelatedResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harvester_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintRelatedResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harvester_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harvester_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsintRelatedResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_harvester_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_harvester_services_proto_goTypes,
		DependencyIndexes: file_harvester_services_proto_depIdxs,
		MessageInfos:      file_harvester_services_proto_msgTypes,
	}.Build()
	File_harvester_services_proto = out.File
	file_harvester_services_proto_rawDesc = nil
	file_harvester_services_proto_goTypes = nil
	file_harvester_services_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ResourceServiceClient is the client API for ResourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceServiceClient interface {
	// Resource
	ListOsintRelatedResource(ctx context.Context, in *ListOsintRelatedResourceRequest, opts ...grpc.CallOption) (*ListOsintRelatedResourceResponse, error)
	// InvokeScan
	InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type resourceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewResourceServiceClient(cc grpc.ClientConnInterface) ResourceServiceClient {
	return &resourceServiceClient{cc}
}

func (c *resourceServiceClient) ListOsintRelatedResource(ctx context.Context, in *ListOsintRelatedResourceRequest, opts ...grpc.CallOption) (*ListOsintRelatedResourceResponse, error) {
	out := new(ListOsintRelatedResourceResponse)
	err := c.cc.Invoke(ctx, "/osint.harvester.ResourceService/ListOsintRelatedResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/osint.harvester.ResourceService/InvokeScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceServiceServer is the server API for ResourceService service.
type ResourceServiceServer interface {
	// Resource
	ListOsintRelatedResource(context.Context, *ListOsintRelatedResourceRequest) (*ListOsintRelatedResourceResponse, error)
	// InvokeScan
	InvokeScan(context.Context, *InvokeScanRequest) (*empty.Empty, error)
}

// UnimplementedResourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResourceServiceServer struct {
}

func (*UnimplementedResourceServiceServer) ListOsintRelatedResource(context.Context, *ListOsintRelatedResourceRequest) (*ListOsintRelatedResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsintRelatedResource not implemented")
}
func (*UnimplementedResourceServiceServer) InvokeScan(context.Context, *InvokeScanRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScan not implemented")
}

func RegisterResourceServiceServer(s *grpc.Server, srv ResourceServiceServer) {
	s.RegisterService(&_ResourceService_serviceDesc, srv)
}

func _ResourceService_ListOsintRelatedResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintRelatedResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).ListOsintRelatedResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.harvester.ResourceService/ListOsintRelatedResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).ListOsintRelatedResource(ctx, req.(*ListOsintRelatedResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_InvokeScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).InvokeScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.harvester.ResourceService/InvokeScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).InvokeScan(ctx, req.(*InvokeScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osint.harvester.ResourceService",
	HandlerType: (*ResourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOsintRelatedResource",
			Handler:    _ResourceService_ListOsintRelatedResource_Handler,
		},
		{
			MethodName: "InvokeScan",
			Handler:    _ResourceService_InvokeScan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "harvester/services.proto",
}
