// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: osint/services.proto

package osint

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Osint Service
type ListOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListOsintRequest) Reset() {
	*x = ListOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintRequest) ProtoMessage() {}

func (x *ListOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintRequest.ProtoReflect.Descriptor instead.
func (*ListOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{0}
}

func (x *ListOsintRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ListOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint []*Osint `protobuf:"bytes,1,rep,name=osint,proto3" json:"osint,omitempty"`
}

func (x *ListOsintResponse) Reset() {
	*x = ListOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintResponse) ProtoMessage() {}

func (x *ListOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintResponse.ProtoReflect.Descriptor instead.
func (*ListOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{1}
}

func (x *ListOsintResponse) GetOsint() []*Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type GetOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintId   uint32 `protobuf:"varint,2,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
}

func (x *GetOsintRequest) Reset() {
	*x = GetOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintRequest) ProtoMessage() {}

func (x *GetOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintRequest.ProtoReflect.Descriptor instead.
func (*GetOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{2}
}

func (x *GetOsintRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetOsintRequest) GetOsintId() uint32 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

type GetOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint *Osint `protobuf:"bytes,1,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *GetOsintResponse) Reset() {
	*x = GetOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintResponse) ProtoMessage() {}

func (x *GetOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintResponse.ProtoReflect.Descriptor instead.
func (*GetOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{3}
}

func (x *GetOsintResponse) GetOsint() *Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type PutOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Osint     *OsintForUpsert `protobuf:"bytes,2,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *PutOsintRequest) Reset() {
	*x = PutOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintRequest) ProtoMessage() {}

func (x *PutOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintRequest.ProtoReflect.Descriptor instead.
func (*PutOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{4}
}

func (x *PutOsintRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutOsintRequest) GetOsint() *OsintForUpsert {
	if x != nil {
		return x.Osint
	}
	return nil
}

type PutOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint *Osint `protobuf:"bytes,1,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *PutOsintResponse) Reset() {
	*x = PutOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintResponse) ProtoMessage() {}

func (x *PutOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintResponse.ProtoReflect.Descriptor instead.
func (*PutOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{5}
}

func (x *PutOsintResponse) GetOsint() *Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type DeleteOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintId   uint32 `protobuf:"varint,2,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
}

func (x *DeleteOsintRequest) Reset() {
	*x = DeleteOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOsintRequest) ProtoMessage() {}

func (x *DeleteOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOsintRequest.ProtoReflect.Descriptor instead.
func (*DeleteOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOsintRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteOsintRequest) GetOsintId() uint32 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

type ListOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListOsintDataSourceRequest) Reset() {
	*x = ListOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDataSourceRequest) ProtoMessage() {}

func (x *ListOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{7}
}

func (x *ListOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListOsintDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource []*OsintDataSource `protobuf:"bytes,1,rep,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *ListOsintDataSourceResponse) Reset() {
	*x = ListOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDataSourceResponse) ProtoMessage() {}

func (x *ListOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{8}
}

func (x *ListOsintDataSourceResponse) GetOsintDataSource() []*OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type GetOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDataSourceId uint32 `protobuf:"varint,2,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
}

func (x *GetOsintDataSourceRequest) Reset() {
	*x = GetOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDataSourceRequest) ProtoMessage() {}

func (x *GetOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GetOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{9}
}

func (x *GetOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetOsintDataSourceRequest) GetOsintDataSourceId() uint32 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

type GetOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource *OsintDataSource `protobuf:"bytes,1,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *GetOsintDataSourceResponse) Reset() {
	*x = GetOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDataSourceResponse) ProtoMessage() {}

func (x *GetOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GetOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{10}
}

func (x *GetOsintDataSourceResponse) GetOsintDataSource() *OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type PutOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint32                    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDataSource *OsintDataSourceForUpsert `protobuf:"bytes,2,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *PutOsintDataSourceRequest) Reset() {
	*x = PutOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDataSourceRequest) ProtoMessage() {}

func (x *PutOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*PutOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{11}
}

func (x *PutOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutOsintDataSourceRequest) GetOsintDataSource() *OsintDataSourceForUpsert {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type PutOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource *OsintDataSource `protobuf:"bytes,1,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *PutOsintDataSourceResponse) Reset() {
	*x = PutOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDataSourceResponse) ProtoMessage() {}

func (x *PutOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*PutOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{12}
}

func (x *PutOsintDataSourceResponse) GetOsintDataSource() *OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type DeleteOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDataSourceId uint32 `protobuf:"varint,2,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
}

func (x *DeleteOsintDataSourceRequest) Reset() {
	*x = DeleteOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOsintDataSourceRequest) ProtoMessage() {}

func (x *DeleteOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteOsintDataSourceRequest) GetOsintDataSourceId() uint32 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

type ListRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintId           uint32 `protobuf:"varint,2,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
	OsintDataSourceId uint32 `protobuf:"varint,3,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
}

func (x *ListRelOsintDataSourceRequest) Reset() {
	*x = ListRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelOsintDataSourceRequest) ProtoMessage() {}

func (x *ListRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{14}
}

func (x *ListRelOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetOsintId() uint32 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetOsintDataSourceId() uint32 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

type ListRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDataSource []*RelOsintDataSource `protobuf:"bytes,1,rep,name=rel_osint_data_source,json=relOsintDataSource,proto3" json:"rel_osint_data_source,omitempty"`
}

func (x *ListRelOsintDataSourceResponse) Reset() {
	*x = ListRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelOsintDataSourceResponse) ProtoMessage() {}

func (x *ListRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{15}
}

func (x *ListRelOsintDataSourceResponse) GetRelOsintDataSource() []*RelOsintDataSource {
	if x != nil {
		return x.RelOsintDataSource
	}
	return nil
}

type GetRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDataSourceId uint32 `protobuf:"varint,1,opt,name=rel_osint_data_source_id,json=relOsintDataSourceId,proto3" json:"rel_osint_data_source_id,omitempty"`
	ProjectId            uint32 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetRelOsintDataSourceRequest) Reset() {
	*x = GetRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelOsintDataSourceRequest) ProtoMessage() {}

func (x *GetRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GetRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{16}
}

func (x *GetRelOsintDataSourceRequest) GetRelOsintDataSourceId() uint32 {
	if x != nil {
		return x.RelOsintDataSourceId
	}
	return 0
}

func (x *GetRelOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type GetRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDataSource *RelOsintDataSource `protobuf:"bytes,1,opt,name=rel_osint_data_source,json=relOsintDataSource,proto3" json:"rel_osint_data_source,omitempty"`
}

func (x *GetRelOsintDataSourceResponse) Reset() {
	*x = GetRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelOsintDataSourceResponse) ProtoMessage() {}

func (x *GetRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GetRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{17}
}

func (x *GetRelOsintDataSourceResponse) GetRelOsintDataSource() *RelOsintDataSource {
	if x != nil {
		return x.RelOsintDataSource
	}
	return nil
}

type PutRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint32                       `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelOsintDataSource *RelOsintDataSourceForUpsert `protobuf:"bytes,2,opt,name=rel_osint_data_source,json=relOsintDataSource,proto3" json:"rel_osint_data_source,omitempty"`
}

func (x *PutRelOsintDataSourceRequest) Reset() {
	*x = PutRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelOsintDataSourceRequest) ProtoMessage() {}

func (x *PutRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*PutRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{18}
}

func (x *PutRelOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutRelOsintDataSourceRequest) GetRelOsintDataSource() *RelOsintDataSourceForUpsert {
	if x != nil {
		return x.RelOsintDataSource
	}
	return nil
}

type PutRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDataSource *RelOsintDataSource `protobuf:"bytes,1,opt,name=rel_osint_data_source,json=relOsintDataSource,proto3" json:"rel_osint_data_source,omitempty"`
}

func (x *PutRelOsintDataSourceResponse) Reset() {
	*x = PutRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelOsintDataSourceResponse) ProtoMessage() {}

func (x *PutRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*PutRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{19}
}

func (x *PutRelOsintDataSourceResponse) GetRelOsintDataSource() *RelOsintDataSource {
	if x != nil {
		return x.RelOsintDataSource
	}
	return nil
}

type DeleteRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId            uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelOsintDataSourceId uint32 `protobuf:"varint,2,opt,name=rel_osint_data_source_id,json=relOsintDataSourceId,proto3" json:"rel_osint_data_source_id,omitempty"`
}

func (x *DeleteRelOsintDataSourceRequest) Reset() {
	*x = DeleteRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelOsintDataSourceRequest) ProtoMessage() {}

func (x *DeleteRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteRelOsintDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteRelOsintDataSourceRequest) GetRelOsintDataSourceId() uint32 {
	if x != nil {
		return x.RelOsintDataSourceId
	}
	return 0
}

type ListOsintDetectWordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId            uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelOsintDataSourceId uint32 `protobuf:"varint,2,opt,name=rel_osint_data_source_id,json=relOsintDataSourceId,proto3" json:"rel_osint_data_source_id,omitempty"`
}

func (x *ListOsintDetectWordRequest) Reset() {
	*x = ListOsintDetectWordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDetectWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDetectWordRequest) ProtoMessage() {}

func (x *ListOsintDetectWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDetectWordRequest.ProtoReflect.Descriptor instead.
func (*ListOsintDetectWordRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{21}
}

func (x *ListOsintDetectWordRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListOsintDetectWordRequest) GetRelOsintDataSourceId() uint32 {
	if x != nil {
		return x.RelOsintDataSourceId
	}
	return 0
}

type ListOsintDetectWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDetectWord []*OsintDetectWord `protobuf:"bytes,1,rep,name=osint_detect_word,json=osintDetectWord,proto3" json:"osint_detect_word,omitempty"`
}

func (x *ListOsintDetectWordResponse) Reset() {
	*x = ListOsintDetectWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDetectWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDetectWordResponse) ProtoMessage() {}

func (x *ListOsintDetectWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDetectWordResponse.ProtoReflect.Descriptor instead.
func (*ListOsintDetectWordResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{22}
}

func (x *ListOsintDetectWordResponse) GetOsintDetectWord() []*OsintDetectWord {
	if x != nil {
		return x.OsintDetectWord
	}
	return nil
}

type GetOsintDetectWordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDetectWordId uint32 `protobuf:"varint,2,opt,name=osint_detect_word_id,json=osintDetectWordId,proto3" json:"osint_detect_word_id,omitempty"`
}

func (x *GetOsintDetectWordRequest) Reset() {
	*x = GetOsintDetectWordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDetectWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDetectWordRequest) ProtoMessage() {}

func (x *GetOsintDetectWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDetectWordRequest.ProtoReflect.Descriptor instead.
func (*GetOsintDetectWordRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{23}
}

func (x *GetOsintDetectWordRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetOsintDetectWordRequest) GetOsintDetectWordId() uint32 {
	if x != nil {
		return x.OsintDetectWordId
	}
	return 0
}

type GetOsintDetectWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDetectWord *OsintDetectWord `protobuf:"bytes,1,opt,name=osint_detect_word,json=osintDetectWord,proto3" json:"osint_detect_word,omitempty"`
}

func (x *GetOsintDetectWordResponse) Reset() {
	*x = GetOsintDetectWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDetectWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDetectWordResponse) ProtoMessage() {}

func (x *GetOsintDetectWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDetectWordResponse.ProtoReflect.Descriptor instead.
func (*GetOsintDetectWordResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{24}
}

func (x *GetOsintDetectWordResponse) GetOsintDetectWord() *OsintDetectWord {
	if x != nil {
		return x.OsintDetectWord
	}
	return nil
}

type PutOsintDetectWordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint32                    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDetectWord *OsintDetectWordForUpsert `protobuf:"bytes,2,opt,name=osint_detect_word,json=osintDetectWord,proto3" json:"osint_detect_word,omitempty"`
}

func (x *PutOsintDetectWordRequest) Reset() {
	*x = PutOsintDetectWordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDetectWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDetectWordRequest) ProtoMessage() {}

func (x *PutOsintDetectWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDetectWordRequest.ProtoReflect.Descriptor instead.
func (*PutOsintDetectWordRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{25}
}

func (x *PutOsintDetectWordRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutOsintDetectWordRequest) GetOsintDetectWord() *OsintDetectWordForUpsert {
	if x != nil {
		return x.OsintDetectWord
	}
	return nil
}

type PutOsintDetectWordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDetectWord *OsintDetectWord `protobuf:"bytes,1,opt,name=osint_detect_word,json=osintDetectWord,proto3" json:"osint_detect_word,omitempty"`
}

func (x *PutOsintDetectWordResponse) Reset() {
	*x = PutOsintDetectWordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDetectWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDetectWordResponse) ProtoMessage() {}

func (x *PutOsintDetectWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDetectWordResponse.ProtoReflect.Descriptor instead.
func (*PutOsintDetectWordResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{26}
}

func (x *PutOsintDetectWordResponse) GetOsintDetectWord() *OsintDetectWord {
	if x != nil {
		return x.OsintDetectWord
	}
	return nil
}

type DeleteOsintDetectWordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OsintDetectWordId uint32 `protobuf:"varint,2,opt,name=osint_detect_word_id,json=osintDetectWordId,proto3" json:"osint_detect_word_id,omitempty"`
}

func (x *DeleteOsintDetectWordRequest) Reset() {
	*x = DeleteOsintDetectWordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOsintDetectWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOsintDetectWordRequest) ProtoMessage() {}

func (x *DeleteOsintDetectWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOsintDetectWordRequest.ProtoReflect.Descriptor instead.
func (*DeleteOsintDetectWordRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteOsintDetectWordRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteOsintDetectWordRequest) GetOsintDetectWordId() uint32 {
	if x != nil {
		return x.OsintDetectWordId
	}
	return 0
}

// Invoke Scan
type InvokeScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId            uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelOsintDataSourceId uint32 `protobuf:"varint,2,opt,name=rel_osint_data_source_id,json=relOsintDataSourceId,proto3" json:"rel_osint_data_source_id,omitempty"`
	ScanOnly             bool   `protobuf:"varint,3,opt,name=scan_only,json=scanOnly,proto3" json:"scan_only,omitempty"`
}

func (x *InvokeScanRequest) Reset() {
	*x = InvokeScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanRequest) ProtoMessage() {}

func (x *InvokeScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{28}
}

func (x *InvokeScanRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InvokeScanRequest) GetRelOsintDataSourceId() uint32 {
	if x != nil {
		return x.RelOsintDataSourceId
	}
	return 0
}

func (x *InvokeScanRequest) GetScanOnly() bool {
	if x != nil {
		return x.ScanOnly
	}
	return false
}

type InvokeScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvokeScanResponse) Reset() {
	*x = InvokeScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanResponse) ProtoMessage() {}

func (x *InvokeScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanResponse.ProtoReflect.Descriptor instead.
func (*InvokeScanResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{29}
}

func (x *InvokeScanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_osint_services_proto protoreflect.FileDescriptor

var file_osint_services_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x1a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x66, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a,
	0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x01,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x1e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15,
	0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x72, 0x65,
	0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x5f,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a,
	0x1c, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x15,
	0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x73, 0x0a, 0x1d, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x72, 0x65,
	0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x78,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x67, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x19,
	0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x66, 0x0a, 0x1a, 0x50,
	0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x22, 0x6e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x5f,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x2e, 0x0a,
	0x12, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc5, 0x0d,
	0x0a, 0x0c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x27, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x12, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x29, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x50, 0x75,
	0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x12, 0x26, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50,
	0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12,
	0x1e, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x2d, 0x72, 0x69, 0x73, 0x6b, 0x65, 0x6e, 0x2f, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_osint_services_proto_rawDescOnce sync.Once
	file_osint_services_proto_rawDescData = file_osint_services_proto_rawDesc
)

func file_osint_services_proto_rawDescGZIP() []byte {
	file_osint_services_proto_rawDescOnce.Do(func() {
		file_osint_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_osint_services_proto_rawDescData)
	})
	return file_osint_services_proto_rawDescData
}

var file_osint_services_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_osint_services_proto_goTypes = []interface{}{
	(*ListOsintRequest)(nil),                // 0: osint.osint.ListOsintRequest
	(*ListOsintResponse)(nil),               // 1: osint.osint.ListOsintResponse
	(*GetOsintRequest)(nil),                 // 2: osint.osint.GetOsintRequest
	(*GetOsintResponse)(nil),                // 3: osint.osint.GetOsintResponse
	(*PutOsintRequest)(nil),                 // 4: osint.osint.PutOsintRequest
	(*PutOsintResponse)(nil),                // 5: osint.osint.PutOsintResponse
	(*DeleteOsintRequest)(nil),              // 6: osint.osint.DeleteOsintRequest
	(*ListOsintDataSourceRequest)(nil),      // 7: osint.osint.ListOsintDataSourceRequest
	(*ListOsintDataSourceResponse)(nil),     // 8: osint.osint.ListOsintDataSourceResponse
	(*GetOsintDataSourceRequest)(nil),       // 9: osint.osint.GetOsintDataSourceRequest
	(*GetOsintDataSourceResponse)(nil),      // 10: osint.osint.GetOsintDataSourceResponse
	(*PutOsintDataSourceRequest)(nil),       // 11: osint.osint.PutOsintDataSourceRequest
	(*PutOsintDataSourceResponse)(nil),      // 12: osint.osint.PutOsintDataSourceResponse
	(*DeleteOsintDataSourceRequest)(nil),    // 13: osint.osint.DeleteOsintDataSourceRequest
	(*ListRelOsintDataSourceRequest)(nil),   // 14: osint.osint.ListRelOsintDataSourceRequest
	(*ListRelOsintDataSourceResponse)(nil),  // 15: osint.osint.ListRelOsintDataSourceResponse
	(*GetRelOsintDataSourceRequest)(nil),    // 16: osint.osint.GetRelOsintDataSourceRequest
	(*GetRelOsintDataSourceResponse)(nil),   // 17: osint.osint.GetRelOsintDataSourceResponse
	(*PutRelOsintDataSourceRequest)(nil),    // 18: osint.osint.PutRelOsintDataSourceRequest
	(*PutRelOsintDataSourceResponse)(nil),   // 19: osint.osint.PutRelOsintDataSourceResponse
	(*DeleteRelOsintDataSourceRequest)(nil), // 20: osint.osint.DeleteRelOsintDataSourceRequest
	(*ListOsintDetectWordRequest)(nil),      // 21: osint.osint.ListOsintDetectWordRequest
	(*ListOsintDetectWordResponse)(nil),     // 22: osint.osint.ListOsintDetectWordResponse
	(*GetOsintDetectWordRequest)(nil),       // 23: osint.osint.GetOsintDetectWordRequest
	(*GetOsintDetectWordResponse)(nil),      // 24: osint.osint.GetOsintDetectWordResponse
	(*PutOsintDetectWordRequest)(nil),       // 25: osint.osint.PutOsintDetectWordRequest
	(*PutOsintDetectWordResponse)(nil),      // 26: osint.osint.PutOsintDetectWordResponse
	(*DeleteOsintDetectWordRequest)(nil),    // 27: osint.osint.DeleteOsintDetectWordRequest
	(*InvokeScanRequest)(nil),               // 28: osint.osint.InvokeScanRequest
	(*InvokeScanResponse)(nil),              // 29: osint.osint.InvokeScanResponse
	(*Osint)(nil),                           // 30: osint.osint.Osint
	(*OsintForUpsert)(nil),                  // 31: osint.osint.OsintForUpsert
	(*OsintDataSource)(nil),                 // 32: osint.osint.OsintDataSource
	(*OsintDataSourceForUpsert)(nil),        // 33: osint.osint.OsintDataSourceForUpsert
	(*RelOsintDataSource)(nil),              // 34: osint.osint.RelOsintDataSource
	(*RelOsintDataSourceForUpsert)(nil),     // 35: osint.osint.RelOsintDataSourceForUpsert
	(*OsintDetectWord)(nil),                 // 36: osint.osint.OsintDetectWord
	(*OsintDetectWordForUpsert)(nil),        // 37: osint.osint.OsintDetectWordForUpsert
	(*emptypb.Empty)(nil),                   // 38: google.protobuf.Empty
}
var file_osint_services_proto_depIdxs = []int32{
	30, // 0: osint.osint.ListOsintResponse.osint:type_name -> osint.osint.Osint
	30, // 1: osint.osint.GetOsintResponse.osint:type_name -> osint.osint.Osint
	31, // 2: osint.osint.PutOsintRequest.osint:type_name -> osint.osint.OsintForUpsert
	30, // 3: osint.osint.PutOsintResponse.osint:type_name -> osint.osint.Osint
	32, // 4: osint.osint.ListOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	32, // 5: osint.osint.GetOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	33, // 6: osint.osint.PutOsintDataSourceRequest.osint_data_source:type_name -> osint.osint.OsintDataSourceForUpsert
	32, // 7: osint.osint.PutOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	34, // 8: osint.osint.ListRelOsintDataSourceResponse.rel_osint_data_source:type_name -> osint.osint.RelOsintDataSource
	34, // 9: osint.osint.GetRelOsintDataSourceResponse.rel_osint_data_source:type_name -> osint.osint.RelOsintDataSource
	35, // 10: osint.osint.PutRelOsintDataSourceRequest.rel_osint_data_source:type_name -> osint.osint.RelOsintDataSourceForUpsert
	34, // 11: osint.osint.PutRelOsintDataSourceResponse.rel_osint_data_source:type_name -> osint.osint.RelOsintDataSource
	36, // 12: osint.osint.ListOsintDetectWordResponse.osint_detect_word:type_name -> osint.osint.OsintDetectWord
	36, // 13: osint.osint.GetOsintDetectWordResponse.osint_detect_word:type_name -> osint.osint.OsintDetectWord
	37, // 14: osint.osint.PutOsintDetectWordRequest.osint_detect_word:type_name -> osint.osint.OsintDetectWordForUpsert
	36, // 15: osint.osint.PutOsintDetectWordResponse.osint_detect_word:type_name -> osint.osint.OsintDetectWord
	0,  // 16: osint.osint.OsintService.ListOsint:input_type -> osint.osint.ListOsintRequest
	2,  // 17: osint.osint.OsintService.GetOsint:input_type -> osint.osint.GetOsintRequest
	4,  // 18: osint.osint.OsintService.PutOsint:input_type -> osint.osint.PutOsintRequest
	6,  // 19: osint.osint.OsintService.DeleteOsint:input_type -> osint.osint.DeleteOsintRequest
	14, // 20: osint.osint.OsintService.ListRelOsintDataSource:input_type -> osint.osint.ListRelOsintDataSourceRequest
	16, // 21: osint.osint.OsintService.GetRelOsintDataSource:input_type -> osint.osint.GetRelOsintDataSourceRequest
	18, // 22: osint.osint.OsintService.PutRelOsintDataSource:input_type -> osint.osint.PutRelOsintDataSourceRequest
	20, // 23: osint.osint.OsintService.DeleteRelOsintDataSource:input_type -> osint.osint.DeleteRelOsintDataSourceRequest
	7,  // 24: osint.osint.OsintService.ListOsintDataSource:input_type -> osint.osint.ListOsintDataSourceRequest
	9,  // 25: osint.osint.OsintService.GetOsintDataSource:input_type -> osint.osint.GetOsintDataSourceRequest
	11, // 26: osint.osint.OsintService.PutOsintDataSource:input_type -> osint.osint.PutOsintDataSourceRequest
	13, // 27: osint.osint.OsintService.DeleteOsintDataSource:input_type -> osint.osint.DeleteOsintDataSourceRequest
	21, // 28: osint.osint.OsintService.ListOsintDetectWord:input_type -> osint.osint.ListOsintDetectWordRequest
	23, // 29: osint.osint.OsintService.GetOsintDetectWord:input_type -> osint.osint.GetOsintDetectWordRequest
	25, // 30: osint.osint.OsintService.PutOsintDetectWord:input_type -> osint.osint.PutOsintDetectWordRequest
	27, // 31: osint.osint.OsintService.DeleteOsintDetectWord:input_type -> osint.osint.DeleteOsintDetectWordRequest
	28, // 32: osint.osint.OsintService.InvokeScan:input_type -> osint.osint.InvokeScanRequest
	38, // 33: osint.osint.OsintService.InvokeScanAll:input_type -> google.protobuf.Empty
	1,  // 34: osint.osint.OsintService.ListOsint:output_type -> osint.osint.ListOsintResponse
	3,  // 35: osint.osint.OsintService.GetOsint:output_type -> osint.osint.GetOsintResponse
	5,  // 36: osint.osint.OsintService.PutOsint:output_type -> osint.osint.PutOsintResponse
	38, // 37: osint.osint.OsintService.DeleteOsint:output_type -> google.protobuf.Empty
	15, // 38: osint.osint.OsintService.ListRelOsintDataSource:output_type -> osint.osint.ListRelOsintDataSourceResponse
	17, // 39: osint.osint.OsintService.GetRelOsintDataSource:output_type -> osint.osint.GetRelOsintDataSourceResponse
	19, // 40: osint.osint.OsintService.PutRelOsintDataSource:output_type -> osint.osint.PutRelOsintDataSourceResponse
	38, // 41: osint.osint.OsintService.DeleteRelOsintDataSource:output_type -> google.protobuf.Empty
	8,  // 42: osint.osint.OsintService.ListOsintDataSource:output_type -> osint.osint.ListOsintDataSourceResponse
	10, // 43: osint.osint.OsintService.GetOsintDataSource:output_type -> osint.osint.GetOsintDataSourceResponse
	12, // 44: osint.osint.OsintService.PutOsintDataSource:output_type -> osint.osint.PutOsintDataSourceResponse
	38, // 45: osint.osint.OsintService.DeleteOsintDataSource:output_type -> google.protobuf.Empty
	22, // 46: osint.osint.OsintService.ListOsintDetectWord:output_type -> osint.osint.ListOsintDetectWordResponse
	24, // 47: osint.osint.OsintService.GetOsintDetectWord:output_type -> osint.osint.GetOsintDetectWordResponse
	26, // 48: osint.osint.OsintService.PutOsintDetectWord:output_type -> osint.osint.PutOsintDetectWordResponse
	38, // 49: osint.osint.OsintService.DeleteOsintDetectWord:output_type -> google.protobuf.Empty
	29, // 50: osint.osint.OsintService.InvokeScan:output_type -> osint.osint.InvokeScanResponse
	38, // 51: osint.osint.OsintService.InvokeScanAll:output_type -> google.protobuf.Empty
	34, // [34:52] is the sub-list for method output_type
	16, // [16:34] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_osint_services_proto_init() }
func file_osint_services_proto_init() {
	if File_osint_services_proto != nil {
		return
	}
	file_osint_entities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_osint_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDetectWordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDetectWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDetectWordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDetectWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDetectWordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDetectWordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOsintDetectWordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_osint_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_osint_services_proto_goTypes,
		DependencyIndexes: file_osint_services_proto_depIdxs,
		MessageInfos:      file_osint_services_proto_msgTypes,
	}.Build()
	File_osint_services_proto = out.File
	file_osint_services_proto_rawDesc = nil
	file_osint_services_proto_goTypes = nil
	file_osint_services_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OsintServiceClient is the client API for OsintService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OsintServiceClient interface {
	// Osint
	ListOsint(ctx context.Context, in *ListOsintRequest, opts ...grpc.CallOption) (*ListOsintResponse, error)
	GetOsint(ctx context.Context, in *GetOsintRequest, opts ...grpc.CallOption) (*GetOsintResponse, error)
	PutOsint(ctx context.Context, in *PutOsintRequest, opts ...grpc.CallOption) (*PutOsintResponse, error)
	DeleteOsint(ctx context.Context, in *DeleteOsintRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// RelOsintDataSource
	ListRelOsintDataSource(ctx context.Context, in *ListRelOsintDataSourceRequest, opts ...grpc.CallOption) (*ListRelOsintDataSourceResponse, error)
	GetRelOsintDataSource(ctx context.Context, in *GetRelOsintDataSourceRequest, opts ...grpc.CallOption) (*GetRelOsintDataSourceResponse, error)
	PutRelOsintDataSource(ctx context.Context, in *PutRelOsintDataSourceRequest, opts ...grpc.CallOption) (*PutRelOsintDataSourceResponse, error)
	DeleteRelOsintDataSource(ctx context.Context, in *DeleteRelOsintDataSourceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// OsintDataSource
	ListOsintDataSource(ctx context.Context, in *ListOsintDataSourceRequest, opts ...grpc.CallOption) (*ListOsintDataSourceResponse, error)
	GetOsintDataSource(ctx context.Context, in *GetOsintDataSourceRequest, opts ...grpc.CallOption) (*GetOsintDataSourceResponse, error)
	PutOsintDataSource(ctx context.Context, in *PutOsintDataSourceRequest, opts ...grpc.CallOption) (*PutOsintDataSourceResponse, error)
	DeleteOsintDataSource(ctx context.Context, in *DeleteOsintDataSourceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// OsintDetectWord
	ListOsintDetectWord(ctx context.Context, in *ListOsintDetectWordRequest, opts ...grpc.CallOption) (*ListOsintDetectWordResponse, error)
	GetOsintDetectWord(ctx context.Context, in *GetOsintDetectWordRequest, opts ...grpc.CallOption) (*GetOsintDetectWordResponse, error)
	PutOsintDetectWord(ctx context.Context, in *PutOsintDetectWordRequest, opts ...grpc.CallOption) (*PutOsintDetectWordResponse, error)
	DeleteOsintDetectWord(ctx context.Context, in *DeleteOsintDetectWordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Invoke
	InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*InvokeScanResponse, error)
	InvokeScanAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type osintServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOsintServiceClient(cc grpc.ClientConnInterface) OsintServiceClient {
	return &osintServiceClient{cc}
}

func (c *osintServiceClient) ListOsint(ctx context.Context, in *ListOsintRequest, opts ...grpc.CallOption) (*ListOsintResponse, error) {
	out := new(ListOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/ListOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) GetOsint(ctx context.Context, in *GetOsintRequest, opts ...grpc.CallOption) (*GetOsintResponse, error) {
	out := new(GetOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/GetOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) PutOsint(ctx context.Context, in *PutOsintRequest, opts ...grpc.CallOption) (*PutOsintResponse, error) {
	out := new(PutOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/PutOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) DeleteOsint(ctx context.Context, in *DeleteOsintRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/DeleteOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) ListRelOsintDataSource(ctx context.Context, in *ListRelOsintDataSourceRequest, opts ...grpc.CallOption) (*ListRelOsintDataSourceResponse, error) {
	out := new(ListRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/ListRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) GetRelOsintDataSource(ctx context.Context, in *GetRelOsintDataSourceRequest, opts ...grpc.CallOption) (*GetRelOsintDataSourceResponse, error) {
	out := new(GetRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/GetRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) PutRelOsintDataSource(ctx context.Context, in *PutRelOsintDataSourceRequest, opts ...grpc.CallOption) (*PutRelOsintDataSourceResponse, error) {
	out := new(PutRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/PutRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) DeleteRelOsintDataSource(ctx context.Context, in *DeleteRelOsintDataSourceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/DeleteRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) ListOsintDataSource(ctx context.Context, in *ListOsintDataSourceRequest, opts ...grpc.CallOption) (*ListOsintDataSourceResponse, error) {
	out := new(ListOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/ListOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) GetOsintDataSource(ctx context.Context, in *GetOsintDataSourceRequest, opts ...grpc.CallOption) (*GetOsintDataSourceResponse, error) {
	out := new(GetOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/GetOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) PutOsintDataSource(ctx context.Context, in *PutOsintDataSourceRequest, opts ...grpc.CallOption) (*PutOsintDataSourceResponse, error) {
	out := new(PutOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/PutOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) DeleteOsintDataSource(ctx context.Context, in *DeleteOsintDataSourceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/DeleteOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) ListOsintDetectWord(ctx context.Context, in *ListOsintDetectWordRequest, opts ...grpc.CallOption) (*ListOsintDetectWordResponse, error) {
	out := new(ListOsintDetectWordResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/ListOsintDetectWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) GetOsintDetectWord(ctx context.Context, in *GetOsintDetectWordRequest, opts ...grpc.CallOption) (*GetOsintDetectWordResponse, error) {
	out := new(GetOsintDetectWordResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/GetOsintDetectWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) PutOsintDetectWord(ctx context.Context, in *PutOsintDetectWordRequest, opts ...grpc.CallOption) (*PutOsintDetectWordResponse, error) {
	out := new(PutOsintDetectWordResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/PutOsintDetectWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) DeleteOsintDetectWord(ctx context.Context, in *DeleteOsintDetectWordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/DeleteOsintDetectWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*InvokeScanResponse, error) {
	out := new(InvokeScanResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/InvokeScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) InvokeScanAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/InvokeScanAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OsintServiceServer is the server API for OsintService service.
type OsintServiceServer interface {
	// Osint
	ListOsint(context.Context, *ListOsintRequest) (*ListOsintResponse, error)
	GetOsint(context.Context, *GetOsintRequest) (*GetOsintResponse, error)
	PutOsint(context.Context, *PutOsintRequest) (*PutOsintResponse, error)
	DeleteOsint(context.Context, *DeleteOsintRequest) (*emptypb.Empty, error)
	// RelOsintDataSource
	ListRelOsintDataSource(context.Context, *ListRelOsintDataSourceRequest) (*ListRelOsintDataSourceResponse, error)
	GetRelOsintDataSource(context.Context, *GetRelOsintDataSourceRequest) (*GetRelOsintDataSourceResponse, error)
	PutRelOsintDataSource(context.Context, *PutRelOsintDataSourceRequest) (*PutRelOsintDataSourceResponse, error)
	DeleteRelOsintDataSource(context.Context, *DeleteRelOsintDataSourceRequest) (*emptypb.Empty, error)
	// OsintDataSource
	ListOsintDataSource(context.Context, *ListOsintDataSourceRequest) (*ListOsintDataSourceResponse, error)
	GetOsintDataSource(context.Context, *GetOsintDataSourceRequest) (*GetOsintDataSourceResponse, error)
	PutOsintDataSource(context.Context, *PutOsintDataSourceRequest) (*PutOsintDataSourceResponse, error)
	DeleteOsintDataSource(context.Context, *DeleteOsintDataSourceRequest) (*emptypb.Empty, error)
	// OsintDetectWord
	ListOsintDetectWord(context.Context, *ListOsintDetectWordRequest) (*ListOsintDetectWordResponse, error)
	GetOsintDetectWord(context.Context, *GetOsintDetectWordRequest) (*GetOsintDetectWordResponse, error)
	PutOsintDetectWord(context.Context, *PutOsintDetectWordRequest) (*PutOsintDetectWordResponse, error)
	DeleteOsintDetectWord(context.Context, *DeleteOsintDetectWordRequest) (*emptypb.Empty, error)
	// Invoke
	InvokeScan(context.Context, *InvokeScanRequest) (*InvokeScanResponse, error)
	InvokeScanAll(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
}

// UnimplementedOsintServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOsintServiceServer struct {
}

func (*UnimplementedOsintServiceServer) ListOsint(context.Context, *ListOsintRequest) (*ListOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsint not implemented")
}
func (*UnimplementedOsintServiceServer) GetOsint(context.Context, *GetOsintRequest) (*GetOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOsint not implemented")
}
func (*UnimplementedOsintServiceServer) PutOsint(context.Context, *PutOsintRequest) (*PutOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOsint not implemented")
}
func (*UnimplementedOsintServiceServer) DeleteOsint(context.Context, *DeleteOsintRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOsint not implemented")
}
func (*UnimplementedOsintServiceServer) ListRelOsintDataSource(context.Context, *ListRelOsintDataSourceRequest) (*ListRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) GetRelOsintDataSource(context.Context, *GetRelOsintDataSourceRequest) (*GetRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) PutRelOsintDataSource(context.Context, *PutRelOsintDataSourceRequest) (*PutRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutRelOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) DeleteRelOsintDataSource(context.Context, *DeleteRelOsintDataSourceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) ListOsintDataSource(context.Context, *ListOsintDataSourceRequest) (*ListOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) GetOsintDataSource(context.Context, *GetOsintDataSourceRequest) (*GetOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) PutOsintDataSource(context.Context, *PutOsintDataSourceRequest) (*PutOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) DeleteOsintDataSource(context.Context, *DeleteOsintDataSourceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOsintDataSource not implemented")
}
func (*UnimplementedOsintServiceServer) ListOsintDetectWord(context.Context, *ListOsintDetectWordRequest) (*ListOsintDetectWordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsintDetectWord not implemented")
}
func (*UnimplementedOsintServiceServer) GetOsintDetectWord(context.Context, *GetOsintDetectWordRequest) (*GetOsintDetectWordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOsintDetectWord not implemented")
}
func (*UnimplementedOsintServiceServer) PutOsintDetectWord(context.Context, *PutOsintDetectWordRequest) (*PutOsintDetectWordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOsintDetectWord not implemented")
}
func (*UnimplementedOsintServiceServer) DeleteOsintDetectWord(context.Context, *DeleteOsintDetectWordRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOsintDetectWord not implemented")
}
func (*UnimplementedOsintServiceServer) InvokeScan(context.Context, *InvokeScanRequest) (*InvokeScanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScan not implemented")
}
func (*UnimplementedOsintServiceServer) InvokeScanAll(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanAll not implemented")
}

func RegisterOsintServiceServer(s *grpc.Server, srv OsintServiceServer) {
	s.RegisterService(&_OsintService_serviceDesc, srv)
}

func _OsintService_ListOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).ListOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/ListOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).ListOsint(ctx, req.(*ListOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_GetOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).GetOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/GetOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).GetOsint(ctx, req.(*GetOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_PutOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).PutOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/PutOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).PutOsint(ctx, req.(*PutOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_DeleteOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).DeleteOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/DeleteOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).DeleteOsint(ctx, req.(*DeleteOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_ListRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).ListRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/ListRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).ListRelOsintDataSource(ctx, req.(*ListRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_GetRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).GetRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/GetRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).GetRelOsintDataSource(ctx, req.(*GetRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_PutRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).PutRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/PutRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).PutRelOsintDataSource(ctx, req.(*PutRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_DeleteRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).DeleteRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/DeleteRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).DeleteRelOsintDataSource(ctx, req.(*DeleteRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_ListOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).ListOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/ListOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).ListOsintDataSource(ctx, req.(*ListOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_GetOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).GetOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/GetOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).GetOsintDataSource(ctx, req.(*GetOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_PutOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).PutOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/PutOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).PutOsintDataSource(ctx, req.(*PutOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_DeleteOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).DeleteOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/DeleteOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).DeleteOsintDataSource(ctx, req.(*DeleteOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_ListOsintDetectWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintDetectWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).ListOsintDetectWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/ListOsintDetectWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).ListOsintDetectWord(ctx, req.(*ListOsintDetectWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_GetOsintDetectWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOsintDetectWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).GetOsintDetectWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/GetOsintDetectWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).GetOsintDetectWord(ctx, req.(*GetOsintDetectWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_PutOsintDetectWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOsintDetectWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).PutOsintDetectWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/PutOsintDetectWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).PutOsintDetectWord(ctx, req.(*PutOsintDetectWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_DeleteOsintDetectWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOsintDetectWordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).DeleteOsintDetectWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/DeleteOsintDetectWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).DeleteOsintDetectWord(ctx, req.(*DeleteOsintDetectWordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_InvokeScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).InvokeScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/InvokeScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).InvokeScan(ctx, req.(*InvokeScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_InvokeScanAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).InvokeScanAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/InvokeScanAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).InvokeScanAll(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _OsintService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osint.osint.OsintService",
	HandlerType: (*OsintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOsint",
			Handler:    _OsintService_ListOsint_Handler,
		},
		{
			MethodName: "GetOsint",
			Handler:    _OsintService_GetOsint_Handler,
		},
		{
			MethodName: "PutOsint",
			Handler:    _OsintService_PutOsint_Handler,
		},
		{
			MethodName: "DeleteOsint",
			Handler:    _OsintService_DeleteOsint_Handler,
		},
		{
			MethodName: "ListRelOsintDataSource",
			Handler:    _OsintService_ListRelOsintDataSource_Handler,
		},
		{
			MethodName: "GetRelOsintDataSource",
			Handler:    _OsintService_GetRelOsintDataSource_Handler,
		},
		{
			MethodName: "PutRelOsintDataSource",
			Handler:    _OsintService_PutRelOsintDataSource_Handler,
		},
		{
			MethodName: "DeleteRelOsintDataSource",
			Handler:    _OsintService_DeleteRelOsintDataSource_Handler,
		},
		{
			MethodName: "ListOsintDataSource",
			Handler:    _OsintService_ListOsintDataSource_Handler,
		},
		{
			MethodName: "GetOsintDataSource",
			Handler:    _OsintService_GetOsintDataSource_Handler,
		},
		{
			MethodName: "PutOsintDataSource",
			Handler:    _OsintService_PutOsintDataSource_Handler,
		},
		{
			MethodName: "DeleteOsintDataSource",
			Handler:    _OsintService_DeleteOsintDataSource_Handler,
		},
		{
			MethodName: "ListOsintDetectWord",
			Handler:    _OsintService_ListOsintDetectWord_Handler,
		},
		{
			MethodName: "GetOsintDetectWord",
			Handler:    _OsintService_GetOsintDetectWord_Handler,
		},
		{
			MethodName: "PutOsintDetectWord",
			Handler:    _OsintService_PutOsintDetectWord_Handler,
		},
		{
			MethodName: "DeleteOsintDetectWord",
			Handler:    _OsintService_DeleteOsintDetectWord_Handler,
		},
		{
			MethodName: "InvokeScan",
			Handler:    _OsintService_InvokeScan_Handler,
		},
		{
			MethodName: "InvokeScanAll",
			Handler:    _OsintService_InvokeScanAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "osint/services.proto",
}
