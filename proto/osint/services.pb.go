// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: osint/services.proto

package osint

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Osint Service
type ListOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId []uint32 `protobuf:"varint,2,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FromAt    int64    `protobuf:"varint,4,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt      int64    `protobuf:"varint,5,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListOsintRequest) Reset() {
	*x = ListOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintRequest) ProtoMessage() {}

func (x *ListOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintRequest.ProtoReflect.Descriptor instead.
func (*ListOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{0}
}

func (x *ListOsintRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOsintRequest) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ListOsintRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListOsintRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListOsintRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint []*Osint `protobuf:"bytes,1,rep,name=osint,proto3" json:"osint,omitempty"`
}

func (x *ListOsintResponse) Reset() {
	*x = ListOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintResponse) ProtoMessage() {}

func (x *ListOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintResponse.ProtoReflect.Descriptor instead.
func (*ListOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{1}
}

func (x *ListOsintResponse) GetOsint() []*Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type GetOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OsintId uint32 `protobuf:"varint,2,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
}

func (x *GetOsintRequest) Reset() {
	*x = GetOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintRequest) ProtoMessage() {}

func (x *GetOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintRequest.ProtoReflect.Descriptor instead.
func (*GetOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{2}
}

func (x *GetOsintRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetOsintRequest) GetOsintId() uint32 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

type GetOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint *Osint `protobuf:"bytes,1,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *GetOsintResponse) Reset() {
	*x = GetOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintResponse) ProtoMessage() {}

func (x *GetOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintResponse.ProtoReflect.Descriptor instead.
func (*GetOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{3}
}

func (x *GetOsintResponse) GetOsint() *Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type PutOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32          `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Osint  *OsintForUpsert `protobuf:"bytes,2,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *PutOsintRequest) Reset() {
	*x = PutOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintRequest) ProtoMessage() {}

func (x *PutOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintRequest.ProtoReflect.Descriptor instead.
func (*PutOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{4}
}

func (x *PutOsintRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutOsintRequest) GetOsint() *OsintForUpsert {
	if x != nil {
		return x.Osint
	}
	return nil
}

type PutOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Osint *Osint `protobuf:"bytes,1,opt,name=osint,proto3" json:"osint,omitempty"`
}

func (x *PutOsintResponse) Reset() {
	*x = PutOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintResponse) ProtoMessage() {}

func (x *PutOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintResponse.ProtoReflect.Descriptor instead.
func (*PutOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{5}
}

func (x *PutOsintResponse) GetOsint() *Osint {
	if x != nil {
		return x.Osint
	}
	return nil
}

type DeleteOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OsintId uint64 `protobuf:"varint,2,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
}

func (x *DeleteOsintRequest) Reset() {
	*x = DeleteOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOsintRequest) ProtoMessage() {}

func (x *DeleteOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOsintRequest.ProtoReflect.Descriptor instead.
func (*DeleteOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOsintRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteOsintRequest) GetOsintId() uint64 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

// RelOsintDataSourceService
type ListRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId         []uint32 `protobuf:"varint,2,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceType      string   `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourceName      string   `protobuf:"bytes,4,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	OsintId           uint64   `protobuf:"varint,5,opt,name=osint_id,json=osintId,proto3" json:"osint_id,omitempty"`
	OsintDataSourceId uint64   `protobuf:"varint,6,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
	FromAt            int64    `protobuf:"varint,7,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt              int64    `protobuf:"varint,8,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListRelOsintDataSourceRequest) Reset() {
	*x = ListRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelOsintDataSourceRequest) ProtoMessage() {}

func (x *ListRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{7}
}

func (x *ListRelOsintDataSourceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ListRelOsintDataSourceRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListRelOsintDataSourceRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *ListRelOsintDataSourceRequest) GetOsintId() uint64 {
	if x != nil {
		return x.OsintId
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetOsintDataSourceId() uint64 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListRelOsintDataSourceRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDatasource []*RelOsintDataSource `protobuf:"bytes,1,rep,name=rel_osint_datasource,json=relOsintDatasource,proto3" json:"rel_osint_datasource,omitempty"`
}

func (x *ListRelOsintDataSourceResponse) Reset() {
	*x = ListRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelOsintDataSourceResponse) ProtoMessage() {}

func (x *ListRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{8}
}

func (x *ListRelOsintDataSourceResponse) GetRelOsintDatasource() []*RelOsintDataSource {
	if x != nil {
		return x.RelOsintDatasource
	}
	return nil
}

type GetRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDatasourceId uint64 `protobuf:"varint,1,opt,name=rel_osint_datasource_id,json=relOsintDatasourceId,proto3" json:"rel_osint_datasource_id,omitempty"`
	UserId               uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetRelOsintDataSourceRequest) Reset() {
	*x = GetRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelOsintDataSourceRequest) ProtoMessage() {}

func (x *GetRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GetRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{9}
}

func (x *GetRelOsintDataSourceRequest) GetRelOsintDatasourceId() uint64 {
	if x != nil {
		return x.RelOsintDatasourceId
	}
	return 0
}

func (x *GetRelOsintDataSourceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDatasource *RelOsintDataSource `protobuf:"bytes,1,opt,name=rel_osint_datasource,json=relOsintDatasource,proto3" json:"rel_osint_datasource,omitempty"`
}

func (x *GetRelOsintDataSourceResponse) Reset() {
	*x = GetRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelOsintDataSourceResponse) ProtoMessage() {}

func (x *GetRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GetRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{10}
}

func (x *GetRelOsintDataSourceResponse) GetRelOsintDatasource() *RelOsintDataSource {
	if x != nil {
		return x.RelOsintDatasource
	}
	return nil
}

type PutRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             uint32                       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RelOsintDatasource *RelOsintDataSourceForUpsert `protobuf:"bytes,2,opt,name=rel_osint_datasource,json=relOsintDatasource,proto3" json:"rel_osint_datasource,omitempty"`
}

func (x *PutRelOsintDataSourceRequest) Reset() {
	*x = PutRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelOsintDataSourceRequest) ProtoMessage() {}

func (x *PutRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*PutRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{11}
}

func (x *PutRelOsintDataSourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutRelOsintDataSourceRequest) GetRelOsintDatasource() *RelOsintDataSourceForUpsert {
	if x != nil {
		return x.RelOsintDatasource
	}
	return nil
}

type PutRelOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDatasource *RelOsintDataSource `protobuf:"bytes,1,opt,name=rel_osint_datasource,json=relOsintDatasource,proto3" json:"rel_osint_datasource,omitempty"`
}

func (x *PutRelOsintDataSourceResponse) Reset() {
	*x = PutRelOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRelOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRelOsintDataSourceResponse) ProtoMessage() {}

func (x *PutRelOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRelOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*PutRelOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{12}
}

func (x *PutRelOsintDataSourceResponse) GetRelOsintDatasource() *RelOsintDataSource {
	if x != nil {
		return x.RelOsintDatasource
	}
	return nil
}

type DeleteRelOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RelOsintDatasourceId uint64 `protobuf:"varint,2,opt,name=rel_osint_datasource_id,json=relOsintDatasourceId,proto3" json:"rel_osint_datasource_id,omitempty"`
}

func (x *DeleteRelOsintDataSourceRequest) Reset() {
	*x = DeleteRelOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelOsintDataSourceRequest) ProtoMessage() {}

func (x *DeleteRelOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteRelOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRelOsintDataSourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteRelOsintDataSourceRequest) GetRelOsintDatasourceId() uint64 {
	if x != nil {
		return x.RelOsintDatasourceId
	}
	return 0
}

// OsintDataSourceService
type ListOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FromAt int64  `protobuf:"varint,3,opt,name=from_at,json=fromAt,proto3" json:"from_at,omitempty"`
	ToAt   int64  `protobuf:"varint,4,opt,name=to_at,json=toAt,proto3" json:"to_at,omitempty"`
}

func (x *ListOsintDataSourceRequest) Reset() {
	*x = ListOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDataSourceRequest) ProtoMessage() {}

func (x *ListOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{14}
}

func (x *ListOsintDataSourceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOsintDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListOsintDataSourceRequest) GetFromAt() int64 {
	if x != nil {
		return x.FromAt
	}
	return 0
}

func (x *ListOsintDataSourceRequest) GetToAt() int64 {
	if x != nil {
		return x.ToAt
	}
	return 0
}

type ListOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource []*OsintDataSource `protobuf:"bytes,1,rep,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *ListOsintDataSourceResponse) Reset() {
	*x = ListOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOsintDataSourceResponse) ProtoMessage() {}

func (x *ListOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{15}
}

func (x *ListOsintDataSourceResponse) GetOsintDataSource() []*OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type GetOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSourceId uint64 `protobuf:"varint,1,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
	UserId            uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetOsintDataSourceRequest) Reset() {
	*x = GetOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDataSourceRequest) ProtoMessage() {}

func (x *GetOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GetOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{16}
}

func (x *GetOsintDataSourceRequest) GetOsintDataSourceId() uint64 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

func (x *GetOsintDataSourceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource *OsintDataSource `protobuf:"bytes,1,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *GetOsintDataSourceResponse) Reset() {
	*x = GetOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOsintDataSourceResponse) ProtoMessage() {}

func (x *GetOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GetOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{17}
}

func (x *GetOsintDataSourceResponse) GetOsintDataSource() *OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type PutOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          uint32                    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OsintDataSource *OsintDataSourceForUpsert `protobuf:"bytes,2,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *PutOsintDataSourceRequest) Reset() {
	*x = PutOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDataSourceRequest) ProtoMessage() {}

func (x *PutOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*PutOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{18}
}

func (x *PutOsintDataSourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutOsintDataSourceRequest) GetOsintDataSource() *OsintDataSourceForUpsert {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type PutOsintDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsintDataSource *OsintDataSource `protobuf:"bytes,1,opt,name=osint_data_source,json=osintDataSource,proto3" json:"osint_data_source,omitempty"`
}

func (x *PutOsintDataSourceResponse) Reset() {
	*x = PutOsintDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOsintDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOsintDataSourceResponse) ProtoMessage() {}

func (x *PutOsintDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOsintDataSourceResponse.ProtoReflect.Descriptor instead.
func (*PutOsintDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{19}
}

func (x *PutOsintDataSourceResponse) GetOsintDataSource() *OsintDataSource {
	if x != nil {
		return x.OsintDataSource
	}
	return nil
}

type DeleteOsintDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OsintDataSourceId uint64 `protobuf:"varint,2,opt,name=osint_data_source_id,json=osintDataSourceId,proto3" json:"osint_data_source_id,omitempty"`
}

func (x *DeleteOsintDataSourceRequest) Reset() {
	*x = DeleteOsintDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOsintDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOsintDataSourceRequest) ProtoMessage() {}

func (x *DeleteOsintDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOsintDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteOsintDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteOsintDataSourceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteOsintDataSourceRequest) GetOsintDataSourceId() uint64 {
	if x != nil {
		return x.OsintDataSourceId
	}
	return 0
}

// KICK Osint
type StartOsintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelOsintDatasourceId uint64 `protobuf:"varint,1,opt,name=rel_osint_datasource_id,json=relOsintDatasourceId,proto3" json:"rel_osint_datasource_id,omitempty"`
}

func (x *StartOsintRequest) Reset() {
	*x = StartOsintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartOsintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartOsintRequest) ProtoMessage() {}

func (x *StartOsintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartOsintRequest.ProtoReflect.Descriptor instead.
func (*StartOsintRequest) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{21}
}

func (x *StartOsintRequest) GetRelOsintDatasourceId() uint64 {
	if x != nil {
		return x.RelOsintDatasourceId
	}
	return 0
}

type StartOsintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartOsintResponse) Reset() {
	*x = StartOsintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osint_services_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartOsintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartOsintResponse) ProtoMessage() {}

func (x *StartOsintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_osint_services_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartOsintResponse.ProtoReflect.Descriptor instead.
func (*StartOsintResponse) Descriptor() ([]byte, []int) {
	return file_osint_services_proto_rawDescGZIP(), []int{22}
}

func (x *StartOsintResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_osint_services_proto protoreflect.FileDescriptor

var file_osint_services_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x1a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74,
	0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x75, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x05, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x9b, 0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x73,
	0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x12, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x5a, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x72, 0x0a,
	0x1d, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x14, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x72,
	0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x71, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x17, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x41, 0x74, 0x22, 0x67, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x11,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x0f,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x66, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x11, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0f, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x5f, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xbc, 0x02,
	0x0a, 0x0c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x4f, 0x73,
	0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e,
	0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xa9, 0x04, 0x0a,
	0x19, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2c, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb4, 0x03, 0x0a, 0x16, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73,
	0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26,
	0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x6f,
	0x73, 0x69, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x73, 0x69, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6f, 0x73, 0x69,
	0x6e, 0x74, 0x2e, 0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x73, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79,
	0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d,
	0x6f, 0x73, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x73, 0x69, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_osint_services_proto_rawDescOnce sync.Once
	file_osint_services_proto_rawDescData = file_osint_services_proto_rawDesc
)

func file_osint_services_proto_rawDescGZIP() []byte {
	file_osint_services_proto_rawDescOnce.Do(func() {
		file_osint_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_osint_services_proto_rawDescData)
	})
	return file_osint_services_proto_rawDescData
}

var file_osint_services_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_osint_services_proto_goTypes = []interface{}{
	(*ListOsintRequest)(nil),                // 0: osint.osint.ListOsintRequest
	(*ListOsintResponse)(nil),               // 1: osint.osint.ListOsintResponse
	(*GetOsintRequest)(nil),                 // 2: osint.osint.GetOsintRequest
	(*GetOsintResponse)(nil),                // 3: osint.osint.GetOsintResponse
	(*PutOsintRequest)(nil),                 // 4: osint.osint.PutOsintRequest
	(*PutOsintResponse)(nil),                // 5: osint.osint.PutOsintResponse
	(*DeleteOsintRequest)(nil),              // 6: osint.osint.DeleteOsintRequest
	(*ListRelOsintDataSourceRequest)(nil),   // 7: osint.osint.ListRelOsintDataSourceRequest
	(*ListRelOsintDataSourceResponse)(nil),  // 8: osint.osint.ListRelOsintDataSourceResponse
	(*GetRelOsintDataSourceRequest)(nil),    // 9: osint.osint.GetRelOsintDataSourceRequest
	(*GetRelOsintDataSourceResponse)(nil),   // 10: osint.osint.GetRelOsintDataSourceResponse
	(*PutRelOsintDataSourceRequest)(nil),    // 11: osint.osint.PutRelOsintDataSourceRequest
	(*PutRelOsintDataSourceResponse)(nil),   // 12: osint.osint.PutRelOsintDataSourceResponse
	(*DeleteRelOsintDataSourceRequest)(nil), // 13: osint.osint.DeleteRelOsintDataSourceRequest
	(*ListOsintDataSourceRequest)(nil),      // 14: osint.osint.ListOsintDataSourceRequest
	(*ListOsintDataSourceResponse)(nil),     // 15: osint.osint.ListOsintDataSourceResponse
	(*GetOsintDataSourceRequest)(nil),       // 16: osint.osint.GetOsintDataSourceRequest
	(*GetOsintDataSourceResponse)(nil),      // 17: osint.osint.GetOsintDataSourceResponse
	(*PutOsintDataSourceRequest)(nil),       // 18: osint.osint.PutOsintDataSourceRequest
	(*PutOsintDataSourceResponse)(nil),      // 19: osint.osint.PutOsintDataSourceResponse
	(*DeleteOsintDataSourceRequest)(nil),    // 20: osint.osint.DeleteOsintDataSourceRequest
	(*StartOsintRequest)(nil),               // 21: osint.osint.StartOsintRequest
	(*StartOsintResponse)(nil),              // 22: osint.osint.StartOsintResponse
	(*Osint)(nil),                           // 23: osint.osint.Osint
	(*OsintForUpsert)(nil),                  // 24: osint.osint.OsintForUpsert
	(*RelOsintDataSource)(nil),              // 25: osint.osint.RelOsintDataSource
	(*RelOsintDataSourceForUpsert)(nil),     // 26: osint.osint.RelOsintDataSourceForUpsert
	(*OsintDataSource)(nil),                 // 27: osint.osint.OsintDataSource
	(*OsintDataSourceForUpsert)(nil),        // 28: osint.osint.OsintDataSourceForUpsert
	(*empty.Empty)(nil),                     // 29: google.protobuf.Empty
}
var file_osint_services_proto_depIdxs = []int32{
	23, // 0: osint.osint.ListOsintResponse.osint:type_name -> osint.osint.Osint
	23, // 1: osint.osint.GetOsintResponse.osint:type_name -> osint.osint.Osint
	24, // 2: osint.osint.PutOsintRequest.osint:type_name -> osint.osint.OsintForUpsert
	23, // 3: osint.osint.PutOsintResponse.osint:type_name -> osint.osint.Osint
	25, // 4: osint.osint.ListRelOsintDataSourceResponse.rel_osint_datasource:type_name -> osint.osint.RelOsintDataSource
	25, // 5: osint.osint.GetRelOsintDataSourceResponse.rel_osint_datasource:type_name -> osint.osint.RelOsintDataSource
	26, // 6: osint.osint.PutRelOsintDataSourceRequest.rel_osint_datasource:type_name -> osint.osint.RelOsintDataSourceForUpsert
	25, // 7: osint.osint.PutRelOsintDataSourceResponse.rel_osint_datasource:type_name -> osint.osint.RelOsintDataSource
	27, // 8: osint.osint.ListOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	27, // 9: osint.osint.GetOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	28, // 10: osint.osint.PutOsintDataSourceRequest.osint_data_source:type_name -> osint.osint.OsintDataSourceForUpsert
	27, // 11: osint.osint.PutOsintDataSourceResponse.osint_data_source:type_name -> osint.osint.OsintDataSource
	0,  // 12: osint.osint.OsintService.ListOsint:input_type -> osint.osint.ListOsintRequest
	2,  // 13: osint.osint.OsintService.GetOsint:input_type -> osint.osint.GetOsintRequest
	4,  // 14: osint.osint.OsintService.PutOsint:input_type -> osint.osint.PutOsintRequest
	6,  // 15: osint.osint.OsintService.DeleteOsint:input_type -> osint.osint.DeleteOsintRequest
	7,  // 16: osint.osint.RelOsintDataSourceService.ListRelOsintDataSource:input_type -> osint.osint.ListRelOsintDataSourceRequest
	9,  // 17: osint.osint.RelOsintDataSourceService.GetRelOsintDataSource:input_type -> osint.osint.GetRelOsintDataSourceRequest
	11, // 18: osint.osint.RelOsintDataSourceService.PutRelOsintDataSource:input_type -> osint.osint.PutRelOsintDataSourceRequest
	13, // 19: osint.osint.RelOsintDataSourceService.DeleteRelOsintDataSource:input_type -> osint.osint.DeleteRelOsintDataSourceRequest
	21, // 20: osint.osint.RelOsintDataSourceService.StartOsint:input_type -> osint.osint.StartOsintRequest
	14, // 21: osint.osint.OsintDataSourceService.ListOsintDataSource:input_type -> osint.osint.ListOsintDataSourceRequest
	16, // 22: osint.osint.OsintDataSourceService.GetOsintDataSource:input_type -> osint.osint.GetOsintDataSourceRequest
	18, // 23: osint.osint.OsintDataSourceService.PutOsintDataSource:input_type -> osint.osint.PutOsintDataSourceRequest
	20, // 24: osint.osint.OsintDataSourceService.DeleteOsintDataSource:input_type -> osint.osint.DeleteOsintDataSourceRequest
	1,  // 25: osint.osint.OsintService.ListOsint:output_type -> osint.osint.ListOsintResponse
	3,  // 26: osint.osint.OsintService.GetOsint:output_type -> osint.osint.GetOsintResponse
	5,  // 27: osint.osint.OsintService.PutOsint:output_type -> osint.osint.PutOsintResponse
	29, // 28: osint.osint.OsintService.DeleteOsint:output_type -> google.protobuf.Empty
	8,  // 29: osint.osint.RelOsintDataSourceService.ListRelOsintDataSource:output_type -> osint.osint.ListRelOsintDataSourceResponse
	10, // 30: osint.osint.RelOsintDataSourceService.GetRelOsintDataSource:output_type -> osint.osint.GetRelOsintDataSourceResponse
	12, // 31: osint.osint.RelOsintDataSourceService.PutRelOsintDataSource:output_type -> osint.osint.PutRelOsintDataSourceResponse
	29, // 32: osint.osint.RelOsintDataSourceService.DeleteRelOsintDataSource:output_type -> google.protobuf.Empty
	22, // 33: osint.osint.RelOsintDataSourceService.StartOsint:output_type -> osint.osint.StartOsintResponse
	15, // 34: osint.osint.OsintDataSourceService.ListOsintDataSource:output_type -> osint.osint.ListOsintDataSourceResponse
	17, // 35: osint.osint.OsintDataSourceService.GetOsintDataSource:output_type -> osint.osint.GetOsintDataSourceResponse
	19, // 36: osint.osint.OsintDataSourceService.PutOsintDataSource:output_type -> osint.osint.PutOsintDataSourceResponse
	29, // 37: osint.osint.OsintDataSourceService.DeleteOsintDataSource:output_type -> google.protobuf.Empty
	25, // [25:38] is the sub-list for method output_type
	12, // [12:25] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_osint_services_proto_init() }
func file_osint_services_proto_init() {
	if File_osint_services_proto != nil {
		return
	}
	file_osint_entities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_osint_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRelOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOsintDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOsintDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartOsintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osint_services_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartOsintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_osint_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_osint_services_proto_goTypes,
		DependencyIndexes: file_osint_services_proto_depIdxs,
		MessageInfos:      file_osint_services_proto_msgTypes,
	}.Build()
	File_osint_services_proto = out.File
	file_osint_services_proto_rawDesc = nil
	file_osint_services_proto_goTypes = nil
	file_osint_services_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OsintServiceClient is the client API for OsintService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OsintServiceClient interface {
	// CRUD
	ListOsint(ctx context.Context, in *ListOsintRequest, opts ...grpc.CallOption) (*ListOsintResponse, error)
	GetOsint(ctx context.Context, in *GetOsintRequest, opts ...grpc.CallOption) (*GetOsintResponse, error)
	PutOsint(ctx context.Context, in *PutOsintRequest, opts ...grpc.CallOption) (*PutOsintResponse, error)
	DeleteOsint(ctx context.Context, in *DeleteOsintRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type osintServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOsintServiceClient(cc grpc.ClientConnInterface) OsintServiceClient {
	return &osintServiceClient{cc}
}

func (c *osintServiceClient) ListOsint(ctx context.Context, in *ListOsintRequest, opts ...grpc.CallOption) (*ListOsintResponse, error) {
	out := new(ListOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/ListOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) GetOsint(ctx context.Context, in *GetOsintRequest, opts ...grpc.CallOption) (*GetOsintResponse, error) {
	out := new(GetOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/GetOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) PutOsint(ctx context.Context, in *PutOsintRequest, opts ...grpc.CallOption) (*PutOsintResponse, error) {
	out := new(PutOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/PutOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintServiceClient) DeleteOsint(ctx context.Context, in *DeleteOsintRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintService/DeleteOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OsintServiceServer is the server API for OsintService service.
type OsintServiceServer interface {
	// CRUD
	ListOsint(context.Context, *ListOsintRequest) (*ListOsintResponse, error)
	GetOsint(context.Context, *GetOsintRequest) (*GetOsintResponse, error)
	PutOsint(context.Context, *PutOsintRequest) (*PutOsintResponse, error)
	DeleteOsint(context.Context, *DeleteOsintRequest) (*empty.Empty, error)
}

// UnimplementedOsintServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOsintServiceServer struct {
}

func (*UnimplementedOsintServiceServer) ListOsint(context.Context, *ListOsintRequest) (*ListOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsint not implemented")
}
func (*UnimplementedOsintServiceServer) GetOsint(context.Context, *GetOsintRequest) (*GetOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOsint not implemented")
}
func (*UnimplementedOsintServiceServer) PutOsint(context.Context, *PutOsintRequest) (*PutOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOsint not implemented")
}
func (*UnimplementedOsintServiceServer) DeleteOsint(context.Context, *DeleteOsintRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOsint not implemented")
}

func RegisterOsintServiceServer(s *grpc.Server, srv OsintServiceServer) {
	s.RegisterService(&_OsintService_serviceDesc, srv)
}

func _OsintService_ListOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).ListOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/ListOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).ListOsint(ctx, req.(*ListOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_GetOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).GetOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/GetOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).GetOsint(ctx, req.(*GetOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_PutOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).PutOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/PutOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).PutOsint(ctx, req.(*PutOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintService_DeleteOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintServiceServer).DeleteOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintService/DeleteOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintServiceServer).DeleteOsint(ctx, req.(*DeleteOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OsintService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osint.osint.OsintService",
	HandlerType: (*OsintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOsint",
			Handler:    _OsintService_ListOsint_Handler,
		},
		{
			MethodName: "GetOsint",
			Handler:    _OsintService_GetOsint_Handler,
		},
		{
			MethodName: "PutOsint",
			Handler:    _OsintService_PutOsint_Handler,
		},
		{
			MethodName: "DeleteOsint",
			Handler:    _OsintService_DeleteOsint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "osint/services.proto",
}

// RelOsintDataSourceServiceClient is the client API for RelOsintDataSourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelOsintDataSourceServiceClient interface {
	// CRUD
	ListRelOsintDataSource(ctx context.Context, in *ListRelOsintDataSourceRequest, opts ...grpc.CallOption) (*ListRelOsintDataSourceResponse, error)
	GetRelOsintDataSource(ctx context.Context, in *GetRelOsintDataSourceRequest, opts ...grpc.CallOption) (*GetRelOsintDataSourceResponse, error)
	PutRelOsintDataSource(ctx context.Context, in *PutRelOsintDataSourceRequest, opts ...grpc.CallOption) (*PutRelOsintDataSourceResponse, error)
	DeleteRelOsintDataSource(ctx context.Context, in *DeleteRelOsintDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// KICK
	StartOsint(ctx context.Context, in *StartOsintRequest, opts ...grpc.CallOption) (*StartOsintResponse, error)
}

type relOsintDataSourceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRelOsintDataSourceServiceClient(cc grpc.ClientConnInterface) RelOsintDataSourceServiceClient {
	return &relOsintDataSourceServiceClient{cc}
}

func (c *relOsintDataSourceServiceClient) ListRelOsintDataSource(ctx context.Context, in *ListRelOsintDataSourceRequest, opts ...grpc.CallOption) (*ListRelOsintDataSourceResponse, error) {
	out := new(ListRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.RelOsintDataSourceService/ListRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relOsintDataSourceServiceClient) GetRelOsintDataSource(ctx context.Context, in *GetRelOsintDataSourceRequest, opts ...grpc.CallOption) (*GetRelOsintDataSourceResponse, error) {
	out := new(GetRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.RelOsintDataSourceService/GetRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relOsintDataSourceServiceClient) PutRelOsintDataSource(ctx context.Context, in *PutRelOsintDataSourceRequest, opts ...grpc.CallOption) (*PutRelOsintDataSourceResponse, error) {
	out := new(PutRelOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.RelOsintDataSourceService/PutRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relOsintDataSourceServiceClient) DeleteRelOsintDataSource(ctx context.Context, in *DeleteRelOsintDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.RelOsintDataSourceService/DeleteRelOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relOsintDataSourceServiceClient) StartOsint(ctx context.Context, in *StartOsintRequest, opts ...grpc.CallOption) (*StartOsintResponse, error) {
	out := new(StartOsintResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.RelOsintDataSourceService/StartOsint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelOsintDataSourceServiceServer is the server API for RelOsintDataSourceService service.
type RelOsintDataSourceServiceServer interface {
	// CRUD
	ListRelOsintDataSource(context.Context, *ListRelOsintDataSourceRequest) (*ListRelOsintDataSourceResponse, error)
	GetRelOsintDataSource(context.Context, *GetRelOsintDataSourceRequest) (*GetRelOsintDataSourceResponse, error)
	PutRelOsintDataSource(context.Context, *PutRelOsintDataSourceRequest) (*PutRelOsintDataSourceResponse, error)
	DeleteRelOsintDataSource(context.Context, *DeleteRelOsintDataSourceRequest) (*empty.Empty, error)
	// KICK
	StartOsint(context.Context, *StartOsintRequest) (*StartOsintResponse, error)
}

// UnimplementedRelOsintDataSourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRelOsintDataSourceServiceServer struct {
}

func (*UnimplementedRelOsintDataSourceServiceServer) ListRelOsintDataSource(context.Context, *ListRelOsintDataSourceRequest) (*ListRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelOsintDataSource not implemented")
}
func (*UnimplementedRelOsintDataSourceServiceServer) GetRelOsintDataSource(context.Context, *GetRelOsintDataSourceRequest) (*GetRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelOsintDataSource not implemented")
}
func (*UnimplementedRelOsintDataSourceServiceServer) PutRelOsintDataSource(context.Context, *PutRelOsintDataSourceRequest) (*PutRelOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutRelOsintDataSource not implemented")
}
func (*UnimplementedRelOsintDataSourceServiceServer) DeleteRelOsintDataSource(context.Context, *DeleteRelOsintDataSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelOsintDataSource not implemented")
}
func (*UnimplementedRelOsintDataSourceServiceServer) StartOsint(context.Context, *StartOsintRequest) (*StartOsintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartOsint not implemented")
}

func RegisterRelOsintDataSourceServiceServer(s *grpc.Server, srv RelOsintDataSourceServiceServer) {
	s.RegisterService(&_RelOsintDataSourceService_serviceDesc, srv)
}

func _RelOsintDataSourceService_ListRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelOsintDataSourceServiceServer).ListRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.RelOsintDataSourceService/ListRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelOsintDataSourceServiceServer).ListRelOsintDataSource(ctx, req.(*ListRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelOsintDataSourceService_GetRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelOsintDataSourceServiceServer).GetRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.RelOsintDataSourceService/GetRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelOsintDataSourceServiceServer).GetRelOsintDataSource(ctx, req.(*GetRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelOsintDataSourceService_PutRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelOsintDataSourceServiceServer).PutRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.RelOsintDataSourceService/PutRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelOsintDataSourceServiceServer).PutRelOsintDataSource(ctx, req.(*PutRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelOsintDataSourceService_DeleteRelOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRelOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelOsintDataSourceServiceServer).DeleteRelOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.RelOsintDataSourceService/DeleteRelOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelOsintDataSourceServiceServer).DeleteRelOsintDataSource(ctx, req.(*DeleteRelOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelOsintDataSourceService_StartOsint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartOsintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelOsintDataSourceServiceServer).StartOsint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.RelOsintDataSourceService/StartOsint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelOsintDataSourceServiceServer).StartOsint(ctx, req.(*StartOsintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RelOsintDataSourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osint.osint.RelOsintDataSourceService",
	HandlerType: (*RelOsintDataSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRelOsintDataSource",
			Handler:    _RelOsintDataSourceService_ListRelOsintDataSource_Handler,
		},
		{
			MethodName: "GetRelOsintDataSource",
			Handler:    _RelOsintDataSourceService_GetRelOsintDataSource_Handler,
		},
		{
			MethodName: "PutRelOsintDataSource",
			Handler:    _RelOsintDataSourceService_PutRelOsintDataSource_Handler,
		},
		{
			MethodName: "DeleteRelOsintDataSource",
			Handler:    _RelOsintDataSourceService_DeleteRelOsintDataSource_Handler,
		},
		{
			MethodName: "StartOsint",
			Handler:    _RelOsintDataSourceService_StartOsint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "osint/services.proto",
}

// OsintDataSourceServiceClient is the client API for OsintDataSourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OsintDataSourceServiceClient interface {
	// CRUD
	ListOsintDataSource(ctx context.Context, in *ListOsintDataSourceRequest, opts ...grpc.CallOption) (*ListOsintDataSourceResponse, error)
	GetOsintDataSource(ctx context.Context, in *GetOsintDataSourceRequest, opts ...grpc.CallOption) (*GetOsintDataSourceResponse, error)
	PutOsintDataSource(ctx context.Context, in *PutOsintDataSourceRequest, opts ...grpc.CallOption) (*PutOsintDataSourceResponse, error)
	DeleteOsintDataSource(ctx context.Context, in *DeleteOsintDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type osintDataSourceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOsintDataSourceServiceClient(cc grpc.ClientConnInterface) OsintDataSourceServiceClient {
	return &osintDataSourceServiceClient{cc}
}

func (c *osintDataSourceServiceClient) ListOsintDataSource(ctx context.Context, in *ListOsintDataSourceRequest, opts ...grpc.CallOption) (*ListOsintDataSourceResponse, error) {
	out := new(ListOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintDataSourceService/ListOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintDataSourceServiceClient) GetOsintDataSource(ctx context.Context, in *GetOsintDataSourceRequest, opts ...grpc.CallOption) (*GetOsintDataSourceResponse, error) {
	out := new(GetOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintDataSourceService/GetOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintDataSourceServiceClient) PutOsintDataSource(ctx context.Context, in *PutOsintDataSourceRequest, opts ...grpc.CallOption) (*PutOsintDataSourceResponse, error) {
	out := new(PutOsintDataSourceResponse)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintDataSourceService/PutOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *osintDataSourceServiceClient) DeleteOsintDataSource(ctx context.Context, in *DeleteOsintDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/osint.osint.OsintDataSourceService/DeleteOsintDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OsintDataSourceServiceServer is the server API for OsintDataSourceService service.
type OsintDataSourceServiceServer interface {
	// CRUD
	ListOsintDataSource(context.Context, *ListOsintDataSourceRequest) (*ListOsintDataSourceResponse, error)
	GetOsintDataSource(context.Context, *GetOsintDataSourceRequest) (*GetOsintDataSourceResponse, error)
	PutOsintDataSource(context.Context, *PutOsintDataSourceRequest) (*PutOsintDataSourceResponse, error)
	DeleteOsintDataSource(context.Context, *DeleteOsintDataSourceRequest) (*empty.Empty, error)
}

// UnimplementedOsintDataSourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOsintDataSourceServiceServer struct {
}

func (*UnimplementedOsintDataSourceServiceServer) ListOsintDataSource(context.Context, *ListOsintDataSourceRequest) (*ListOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOsintDataSource not implemented")
}
func (*UnimplementedOsintDataSourceServiceServer) GetOsintDataSource(context.Context, *GetOsintDataSourceRequest) (*GetOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOsintDataSource not implemented")
}
func (*UnimplementedOsintDataSourceServiceServer) PutOsintDataSource(context.Context, *PutOsintDataSourceRequest) (*PutOsintDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutOsintDataSource not implemented")
}
func (*UnimplementedOsintDataSourceServiceServer) DeleteOsintDataSource(context.Context, *DeleteOsintDataSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOsintDataSource not implemented")
}

func RegisterOsintDataSourceServiceServer(s *grpc.Server, srv OsintDataSourceServiceServer) {
	s.RegisterService(&_OsintDataSourceService_serviceDesc, srv)
}

func _OsintDataSourceService_ListOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintDataSourceServiceServer).ListOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintDataSourceService/ListOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintDataSourceServiceServer).ListOsintDataSource(ctx, req.(*ListOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintDataSourceService_GetOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintDataSourceServiceServer).GetOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintDataSourceService/GetOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintDataSourceServiceServer).GetOsintDataSource(ctx, req.(*GetOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintDataSourceService_PutOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintDataSourceServiceServer).PutOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintDataSourceService/PutOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintDataSourceServiceServer).PutOsintDataSource(ctx, req.(*PutOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OsintDataSourceService_DeleteOsintDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOsintDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OsintDataSourceServiceServer).DeleteOsintDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/osint.osint.OsintDataSourceService/DeleteOsintDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OsintDataSourceServiceServer).DeleteOsintDataSource(ctx, req.(*DeleteOsintDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OsintDataSourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "osint.osint.OsintDataSourceService",
	HandlerType: (*OsintDataSourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOsintDataSource",
			Handler:    _OsintDataSourceService_ListOsintDataSource_Handler,
		},
		{
			MethodName: "GetOsintDataSource",
			Handler:    _OsintDataSourceService_GetOsintDataSource_Handler,
		},
		{
			MethodName: "PutOsintDataSource",
			Handler:    _OsintDataSourceService_PutOsintDataSource_Handler,
		},
		{
			MethodName: "DeleteOsintDataSource",
			Handler:    _OsintDataSourceService_DeleteOsintDataSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "osint/services.proto",
}
