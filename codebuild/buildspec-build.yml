version: 0.2

env:
  variables:
    IMAGE_OSINT: "osint/osint"
    IMAGE_SUBDOMAIN: "osint/subdomain"
  parameter-store:
    GITHUB_USER: "/build/GITHUB_USER"
    GITHUB_TOKEN: "/build/GITHUB_TOKEN"

phases:
  install:
    runtime-versions:
      golang: 1.14
    commands:
      - echo "machine github.com" > ~/.netrc
      - echo "login ${GITHUB_USER}" >> ~/.netrc
      - echo "password ${GITHUB_TOKEN}" >> ~/.netrc
  pre_build:
    commands:
      - echo Setting environment variables
      - SRC=${CODEBUILD_SRC_DIR}/src
      - BUILD_OPT="--no-cache --pull"
      - TAG=v0.0.${CODEBUILD_BUILD_NUMBER}
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REGISTORY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      - echo Testing the sources...
      - cd ${SRC}/osint     && go test ./...
      - cd ${SRC}/subdomain && go test ./...

      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
  build:
    commands:
      - echo Build gateway started on `date`
      - echo Pushing the Docker images...
      - cd ${SRC}/osint     && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_OSINT}:${TAG} .
      - cd ${SRC}/subdomain && docker build ${BUILD_OPT} --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} -t ${IMAGE_SUBDOMAIN}:${TAG} .